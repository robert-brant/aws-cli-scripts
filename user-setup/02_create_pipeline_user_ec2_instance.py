import json, os

#The user-ec2-config.json is manually created/edited with account and vpc details.
configFile = 'user-ec2-config.json'
#The script-user-security-group-id.json file is generated by /security-groups/create_user_security_group.sh
securityGroupFile = 'security-groups/script-user-security-group-id.json'
f = open(configFile)
configData = json.load(f)
f2 = open(securityGroupFile)
securityData = json.load(f2)
#The .pem file created here is used to ssh into the user ec2 instance with the command:
# ssh -i script-user-key-pair.pem ec2-user@<PublicDnsName>
# PublicDnsName should be in the user-instance-details.json or can be found using the instance id found in the user-instance-details.json with the following query:
# aws ec2 describe-instances --instance-ids <instance id> --query 'Reservations[].Instances[].PublicDnsName'
os.system('aws ec2 create-key-pair --key-name script-user-key-pair > script-user-key-pair.pem')
buildCommand = "aws ec2 run-instances --image-id {} --count 1 --instance-type t2.micro --key-name script-user-key-pair --security-group-ids {} --tag-specifications 'ResourceType=instance,Tags=[{{Key=Name,Value=script-user}}]' > user-instance-details.json".format(configData['ami-id'],securityData['GroupId'])
os.system(buildCommand)
f3 = open('admin-instance-details.json')
instanceData = json.load(f3)
iamCommand = "aws ec2 associate-iam-instance-profile --instance-id {} --iam-instance-profile Name=script-user-profile".format(instanceData['Instances'][0]['InstanceId'])
os.system(iamCommand)
