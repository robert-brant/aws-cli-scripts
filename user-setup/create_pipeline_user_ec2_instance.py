import json, os

#### THIS SCRIPT CREATES AN EC2 INSTANCE FOR AN IAM USER THAT ALLOWS THEM TO RUN ALL NECESSARY FUNCTIONS FOR MANAGING AN AWS BUILD PIPELINE ####

#The user-ec2-config.json is manually created/edited with account and vpc details.
configFile = 'user-ec2-config.json'
#The script-user-security-group-id.json file is generated by /security-groups/create_user_security_group.sh
securityGroupFile = 'security-groups/script-user-security-group-id.json'

## LOAD CONFIG FILES FROM EARLIER PROCESSES ##
f = open(configFile)
configData = json.load(f)
f2 = open(securityGroupFile)
securityData = json.load(f2)

### CREATE KEY PAIR FOR CONNECTING TO EC2 INSTANCE ###
#The .pem file created here is used to ssh into the user ec2 instance with the command:
# ssh -i script-user-key-pair.pem ec2-user@<PublicDnsName>
# PublicDnsName should be in the user-instance-details.json or can be found using the instance id found in the user-instance-details.json with the following query:
# aws ec2 describe-instances --instance-ids <instance id> --query 'Reservations[].Instances[].PublicDnsName'
keyCommand = "aws ec2 create-key-pair --key-name script-{}-key-pair > script-{}-key-pair.pem".format(configData['iam-user'])
# DEBUG print statement
# print(keyCommand)
# execute command
os.system(keyCommand)

### BUILD AND START THE EC2 INSTANCE ###
buildCommand = "aws ec2 run-instances --image-id {} --count 1 --instance-type t2.micro --key-name script-{}-key-pair --security-group-ids {} --tag-specifications 'ResourceType=instance,Tags=[{{Key=Name,Value=script-user}}]' > user-instance-details.json".format(configData['ami-id'],configData['iam-user'],securityData['GroupId'])
#DEBUG print statement
# print(buildCommand)
# execute command
os.system(buildCommand)

### ATTACH SECURITY TO THE RUNNING INSTANCE ###
#user-instance-details is created when buildCommand is executed successfully.
f3 = open('user-instance-details.json')
instanceData = json.load(f3)
iamCommand = "aws ec2 associate-iam-instance-profile --instance-id {} --iam-instance-profile Name=script-user-profile".format(instanceData['Instances'][0]['InstanceId'])

# DEBUG print statement
# print(iamCommand)
# excute command
os.system(iamCommand)
